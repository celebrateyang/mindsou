1. 静态内部类不会自动随着外部类的加载和初始化而初始化，它需要单独去加载和初始化。
2. volatile 轻量级的同步机制: 保证可见性，不保证原子性，禁止指令重排
3. JMM java 内存模型，是一种规范。 可见性，原子性，有序性(禁止指令重排)
4. 指令重排序的原则 不影响单线程下的执行结果
5. Threadlocal 使用时如何避免内存泄露，原因：ThreadLocalMap的key是个弱引用，而value是强引用。
  导致gc时，key已经变为null,此时如果线程没有结束，value就一直不被gc
6. 强引用： new 或者反射创建出的对象，即使oom也不会被垃圾回收(gc)。要想被垃圾回收，需要显式的赋值null
7. 弱引用： 用WeakReference包裹的对象。 gc一次就会被回收一次
